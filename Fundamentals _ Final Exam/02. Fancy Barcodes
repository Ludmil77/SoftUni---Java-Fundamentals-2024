import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class _02_Fancy_Barcodes
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        for(int i = 0; i < n; i++)
        {
            String input = scanner.nextLine();
            findMatchesAndPrint(input);
        }

    }
    public static void findMatchesAndPrint(String input)
    {
        final String regex = "([@][#]+)(?<barcode>[A-Z][A-Za-z\\d]{4,}[A-Z])([@][#]+)";
        final String string = input;

        final Pattern pattern = Pattern.compile(regex, Pattern.MULTILINE);
        final Matcher matcher = pattern.matcher(string);

        if (matcher.find())
        {
           StringBuilder sb = new StringBuilder();
           String barcode = matcher.group("barcode");
           for(int i = 0; i < barcode.length(); i++)
           {
               if(Character.isDigit(barcode.charAt(i)))
               {
                   sb.append(barcode.charAt(i)).trimToSize();
               }
           }
           if(sb.toString().length() == 0)
           {
               System.out.println("Product group: 00");
           }
           else
           {
               System.out.printf("Product group: %s%n", sb.toString());
           }
           sb.setLength(0);
        }
        else
        {
           System.out.println("Invalid barcode");
        }
    }
}
